package day01;

public class d1exam1 {

	public static void main(String[] args) {
		/* 
		 d1 변수 variable
		 변수 = 값을 저장할 수 있는 메모리 공간
		
		 변수 명명 규칙
		 대소문자가 구분되며 길이에 제한이 없다
		 숫자로 시작해서는 안된다
		 특수문자는 _와 $만을 허용한다
		 예약어를 사용해서는 안된다
		 공백, 중복 사용은 안된다

		 변수 명명 관례
		 클래스 이름의 첫 글자는 항상 대문자
		 자주쓰는 단어는 약어를 통해서 사용, 해당 변수 이름만 보고 유추할수 있는 이름이 좋다
		 여러단어로 이루어진 변수명의 뒷글자는 대문자로 표기
		 
		 

		 상수 constant : 저장하면 변경할수 없는 값, 값을 한번만 저장할 수 있는 공간, 수식에서 변하지 않는 값
		 앞에 final을 붙이고 항상 초기값이 필요
		 상수의 이름은 모두 대문자로 하고 여러 글자로 이루어진 경우_로 구분한다
		 리터럴 literal : 그 자체로 값을 의미하는 것 
		 
		 상수의 사용
		상수명 = 값;
		
		J = 10; (J에는 값을 담을 수 있는 기회가 단 한 번만 허락됨)
		상수 명명 관례
		대문자로만 구성된 명사로 정함
		
		여러 단어로 구성된 이름의 경우 단어 사이에 '_'을 써서 구분함.
		
		상수를 사용해야 하는 경우
		값이 변하면 위험한 경우에 상수를 사용
		
		값만 봤을때 무엇을 의미하는지 쉽게 파악할 수 없는 값에도 값 자체를 사용하기 보다는 상수를 사용


		 */
		int i = 2;
			i = 10;
			System.out.println(i);
			
		final int MAX_SIZE = 10;
				//MAX_SIZE = 20; (MAX_SIZE에는 값을 담을 수 있는 기회가 단 한 번만 허락됨)
		final char PLUS = '+';
		double circleArray;
		final double PI = 3.14159;
		circleArray = 3 * 3 * PI;
		final int OIL_PRICE = 1450;
		int totalPrice = 50 * OIL_PRICE;
		
		/*
		 자바
		 1995년에 썬 마이크로시스템즈에서 발표한 객체지향 언어
		 현재 썬 마이크로시스템즈는 오라클에 인수된 상태
		 JVM 자바로 만들어진 프로그램을 실행해주는 프로그램
		 JVM() 만 있으면 윈도우, 리눅스, 맥등 어떤 플랫폼에서도 실행이 가능
		 Garbage Collector로 사용되지 않는 메모리를 자동적으로 정리해준다
		 컴파일러는 작성한 코드를 실행하능한 파일로 변환 하는 프로그램 = 컴파일러 compiler
		 컴파일러 에러 = 프로그램에 오류가 있으면 컴파일 과정에서 오류가 발생하는데 이것을 컴파일 에러라고함
		 */
		/** 문서화 주석 */
	}

}
